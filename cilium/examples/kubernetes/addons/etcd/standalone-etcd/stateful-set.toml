
api-version = "apps/v1"
kind = "StatefulSet"

[metadata]
name = "etcd-cilium"

[metadata.labels]
component = "cilium-etcd"

[spec]
service-name = "cilium-etcd"

[spec.selector.match-labels]
component = "cilium-etcd"

[spec.template.metadata]
name = "etcd"

[spec.template.metadata.labels]
component = "cilium-etcd"

[spec.template.spec]
host-network = true

[[spec.template.spec.tolerations]]
key = "node.kubernetes.io/not-ready"
operator = "Exists"

[[spec.template.spec.affinity.pod-anti-affinity.required-during-scheduling-ignored-during-execution]]
topology-key = "kubernetes.io/hostname"

[[spec.template.spec.affinity.pod-anti-affinity.required-during-scheduling-ignored-during-execution.label-selector.match-expressions]]
key = "component"
operator = "In"
values = [ "cilium-etcd" ]

[[spec.template.spec.containers]]
name = "etcd"
image = "quay.io/coreos/etcd:v3.3.25"
command = [ "/usr/local/bin/etcd" ]
args = [
  "--name=cilium-etcd-$(HOSTNAME_IP)",
  "--listen-client-urls=http://0.0.0.0:32379",
  "--listen-peer-urls=http://0.0.0.0:32380",
  "--advertise-client-urls=http://$(HOSTNAME_IP):32379",
  "--initial-cluster-token=cilium-etcd-cluster-1",
  "--initial-cluster-state=new",
  "--data-dir=/var/etcd/cilium-etcd/default.etcd"
]

[[spec.template.spec.containers.env]]
name = "HOSTNAME_IP"

[spec.template.spec.containers.env.value-from.field-ref]
field-path = "status.podIP"

[[spec.template.spec.containers.volume-mounts]]
name = "local-vol"
mount-path = "/var/etcd"

[[spec.template.spec.volumes]]
name = "local-vol"

[spec.template.spec.volumes.host-path]
path = "/var/etcd"
